package  {	import flash.events.Event;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.display.MovieClip;	import flash.geom.Point;			public class GrappleHook extends MovieClip 	{				static const COOLDOWN:Number = 5;		var isFired:Boolean;				var duration:Number = 0.5;		var cooldown:Number = 0;		var initialPos:Point;				//controls the movement		var myMovement:Tween;			public function GrappleHook(){			this.addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}			public function onAddedToStage(event:Event)		{			initialPos = new Point();			//remove the intializer			this.removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			this.addEventListener(Event.ENTER_FRAME, onTick);		}//end method				public function onTick(event:Event){							trace(this.x+ " : "+ this.y);		}//end method		/*public override function onAddedToStage(event:Event) {			super.onAddedToStage(event);		}				public override function onTick() {			super.onTick();						if ( this.hitTestObject(Game.gameContainer) ) {																/* Just conceptual pseudo code.				if ( this.hitTestObject(Game.guards) ) {					guard.stun();				}				if ( this.hitTestObject(Game.grapplepoints) ) {					Game.hero.grapple(grapplepoint);				}							}		}				public function use() {			this.cooldown = COOLDOWN;		}	}*/			public function fireHook(target:Point)				{	initialPos = new Point(this.x, 								   this.y);			//trace("Pew Pew: " + initialPos + "map: " + Game.gameContainer.levelMap.x +" : " + Game.gameContainer.levelMap.y);			//myMovement = new Tween(this,"x",Regular.easeInOut,this.x, target.x,duration,true);		}//end method	}//end class}//end package